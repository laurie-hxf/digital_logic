`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2024/12/21 14:40:27
// Design Name: 
// Module Name: OverAllClock
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module OverAllClock(  //ï¿½ï¿½Îªworking clock ï¿½Ä¶ï¿½ï¿½ï¿½Ä£ï¿½ï¿½
    input clk,      // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½
    input rst_n,    // ï¿½ï¿½ï¿½ï¿½ï¿½Åºï¿½
    input Setting,
    input Confirm,
    input AddOne,    
    input Working,
    input power_on_pos,
    output  [5:0] an, // ï¿½ï¿½Ê¾Î»ï¿½ï¿½Ñ¡ï¿½ï¿½
    output [7:0] seg,seg2 // ï¿½ß¶ï¿½ï¿½ï¿½Ê¾ï¿½Åºï¿½
//    output AddOne_debounce
//    output  [4:0] hour_out,   
//    output  [5:0] min_out,
//    output  [5:0] sec_out
   

);
   wire  [4:0] hour_out;   
wire  [5:0] min_out;
wire  [5:0] sec_out;
//    Timer timer(.clk_1Hz(clk_1Hz),.clk(clk),.IfRunning(Working), .rst_n(rst_n), .sec(sec_out), .min(min_out), .hour(hour_out));
    OverAllTimeCheck display(.working(Working),.AddOne(AddOne),.Confirm(Confirm),.power_on_pos(power_on_pos),
    .Setting(Setting),.rst_n(rst_n),.clk(clk),  .an(an), .seg(seg),.seg2(seg2),.hour_out(hour_out),.min_out(min_out),.sec_out(sec_out));  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½É¹ï¿½ï¿½ï¿½Ê±ï¿½Óµï¿½ï¿½ï¿½Ê¾ï¿½ÅºÅ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç°Ê±ï¿½ï¿??
endmodule
